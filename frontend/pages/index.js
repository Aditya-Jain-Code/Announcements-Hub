import useFetchData from "@/hooks/useFetchData";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import { GiBookshelf } from "react-icons/gi";
import { FaBriefcase, FaCalendarAlt, FaRunning } from "react-icons/fa";

export default function Home() {

  const [currentPage, setCurrentPage] = useState(1);
  const [perPage] = useState(3);

  const { allData, loading } = useFetchData("/api/getnews");

  const publishedNews = allData.filter(news => news.status === "publish");

  const paginate = (pageNumber) => {
    setCurrentPage(pageNumber);
  }

  const indexOfLastNews = currentPage * perPage;
  const indexOfFirstNews = indexOfLastNews - perPage;
  const currentNews = publishedNews.slice(indexOfFirstNews, indexOfLastNews);

  const totalNews = publishedNews.length;

  const pageNumbers = [];
  for (let i = 1; i <= Math.ceil(totalNews / perPage); i++) {
    pageNumbers.push(i);
  }

  function extractFirstImageUrl(markdownContent) {
    if (!markdownContent || typeof markdownContent !== "string") return null;
    const regex = /!\[.*?]\((.*?)\)/;
    const match = markdownContent.match(regex);
    return match ? match[1] : null;
  }

  function removeMarkdown(text) {
    if (!text) return "";
    // Regular expression to remove markdown syntax
    return text.replace(/(\*\*|__|[*_~`>#-]|!\[.*?\]\(.*?\)|\[(.*?)\]\(.*?\))/g, "").trim();
  }

  function truncateText(text, maxWords = 20) {
    const cleanText = removeMarkdown(text); // Remove markdown first
    const words = cleanText.split(" ");
    return words.length > maxWords ? words.slice(0, maxWords).join(" ") + "..." : cleanText;
  }

  return (
    <>
      <Head>
        <title>Announcements Hub</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <section className="header_data_section">
        <div className="container flex flex-sb w-100">
          <div className="leftheader_info">
            <h2>Stay informed with the latest updates, events, and important notices from across the university all in one place.</h2>
          </div>
        </div>
      </section>

      <section className="main_news_section">
        <div className="container flex flex-sb flex-left flex-warp">
          <div className="leftnews_sec">
            <h2>Recently Published</h2>
            <div className="news_sec">
              {loading ? <div className="wh-100 flex flex-center mt-2 pb-5">
                <div className="loader"></div>
              </div> : <>
                {currentNews.map((news) => {
                  const firstImageUrl = extractFirstImageUrl(news.description);
                  return <div className="news" key={news._id}>
                    <div className="newsimg">
                      <Link href={`/news/${news.slug}`}>
                        <img src={firstImageUrl || "img/noimage.avif"} alt={news.title} />
                      </Link>
                    </div>
                    <div className="newsinfo">
                      <Link href={`/tag/${news.tags}`}>
                        <div className="newstag">{news.tags}</div>
                      </Link>
                      <Link href={`news/${news.slug}`}><h3>{news.title}</h3></Link>
                      <p>{truncateText(news.description, 15)}</p>
                      <div className="newsauthor flex gap-1">
                        <div className="newsaimg">
                          <img src="/img/coder.png" alt="coder" />
                        </div>
                        <div className="flex flex-col flex-left gap-05">
                          <h4>Aditya Jain</h4>
                          <span>{new Date(news.createdAt).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}</span>
                        </div>
                      </div>
                    </div>
                  </div>
                })}
              </>}
            </div>
            <div className="newspagination">
              <button onClick={() => paginate(currentPage - 1)} disabled={currentPage === 1}>Previous</button>
              {pageNumbers.slice(Math.max(currentPage - 3, 0), Math.min(currentPage + 2, pageNumbers.length)).map(
                number => (
                  <button
                    key={number}
                    onClick={() => paginate(number)}
                    className={currentPage === number ? 'active' : ''}>
                    {number}
                  </button>
                )
              )}
              <button
                onClick={() => paginate(currentPage + 1)}
                disabled={currentPage === Math.ceil(totalNews / perPage)}
              >
                Next
              </button>

            </div>
          </div>
          <div className="rightnews_info">
            <div className="topics_sec">
              <h2>Topics</h2>
              <div className="topics_list">
                <Link href="/topics/academics">
                  <div className="topics">
                    <div className="flex flex-center topics_svg">
                      <GiBookshelf />
                    </div>
                    <h3>Academics</h3>
                  </div>
                </Link>
                <Link href="/topics/placements">
                  <div className="topics">
                    <div className="flex flex-center topics_svg">
                      <FaBriefcase />
                    </div>
                    <h3>Placements</h3>
                  </div>
                </Link>
                <Link href="/topics/events">
                  <div className="topics">
                    <div className="flex flex-center topics_svg">
                      <FaCalendarAlt />
                    </div>
                    <h3>Events</h3>
                  </div>
                </Link>
                <Link href="/topics/curricular">
                  <div className="topics">
                    <div className="flex flex-center topics_svg">
                      <FaRunning />
                    </div>
                    <h3>Co-Curricular</h3>
                  </div>
                </Link>
              </div>
            </div>
            <div className="tags_sec mt-3">
              <h2>Tags</h2>
              <div className="tags_list">
                <Link href="/tag/academics">#Academics</Link>
                <Link href="/tag/competition">#Competition</Link>
                <Link href="/tag/guestlecture">#GuestLecture</Link>
                <Link href="/tag/cultural">#Cultural</Link>
                <Link href="/tag/edmnights">#EDMNights</Link>
                <Link href="/tag/events">#Events</Link>
                <Link href="/tag/placements">#Placements</Link>
                <Link href="/tag/sports">#Sports</Link>
                <Link href="/tag/miscellaneous">#Miscellaneous</Link>
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
}
